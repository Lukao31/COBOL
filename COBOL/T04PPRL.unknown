      *----------------------------------------------------------------*
       IDENTIFICATION                      DIVISION.
      *----------------------------------------------------------------*
       PROGRAM-ID.                         T04PPRL.
       AUTHOR.                             GABRIEL

      *----------------------------------------------------------------*
       ENVIRONMENT                         DIVISION.
      *----------------------------------------------------------------*
       CONFIGURATION                       SECTION.
       SPECIAL-NAMES.
           DECIMAL-POINT IS COMMA.

      *----------------------------------------------------------------*
       DATA                                DIVISION.
      *----------------------------------------------------------------*
       WORKING-STORAGE                     SECTION.
      *----------------------------------------------------------------*
       77  WS-MSG-ERRO                     PIC X(80).
       77  WS-LENGTH                       PIC S9(04) COMP.

       01  WS-DATA.
           05 WS-ANO                       PIC X(02).
           05 WS-MES                       PIC X(02).
           05 WS-DIA                       PIC X(04).

       01  WS-HORARIO.
           05 WS-HORA                      PIC X(02).
           05 WS-MIN                       PIC X(02).
           05 WS-SEG                       PIC X(02).

       01  WS-DATA-F.
           05 WS-DIA-F                     PIC X(02).
           05 FILLER                       PIC X(01) VALUE '/'.
           05 WS-MES-F                     PIC X(02).
           05 FILLER                       PIC X(01) VALUE '/'.
           05 WS-ANO-F                     PIC X(02).

       01  WS-HORARIO-F.
           05 WS-HORA-F                    PIC X(02).
           05 FILLER                       PIC X(01) VALUE ':'.
           05 WS-MIN-F                     PIC X(02).
           05 FILLER                       PIC X(01) VALUE ':'.
           05 WS-SEG-F                     PIC X(02).

       01  WS-DFHCOMMAREA.
           05 WS-FASE                      PIC X(01).
           05 WS-ID-CPF                    PIC X(11).
           05 WS-PAGA                      PIC 9(2).
           05 WS-PAGT                      PIC 9(2).
      *    05 WS-MSG                       PIC X(60).

       01  WS-DFHCOMMAREA-AUX.
           05 WS-FASE-COMMAREA             PIC X(01).
           05 WS-ID-PROD-COMMAREA          PIC X(04).
           05 WS-ID-CPF                    PIC X(11).

       01  WS-MIN-BUSCA           PIC S9(5)V9(2) COMP-3.
       01  WS-MAX-BUSCA           PIC S9(5)V9(2) COMP-3.

       01  WS-LINDET.
           05 FILLER                       PIC X(6)
                                                   VALUE SPACES.
           05 LD-PRODUTO                   PIC X(25).
           05 FILLER                       PIC X(4)
                                                   VALUE SPACES.
           05 LD-VENDIDO                   PIC X(20).
           05 FILLER                       PIC X(5)
                                                   VALUE SPACES.
           05 LD-VALOR                     PIC ZZ.ZZ9,99.
           05 FILLER                       PIC X(9)
                                                   VALUE SPACES.
       01  WS-TEXTO-LEN                    PIC 9(3).

       77  WS-TEXTO-FINAL                  PIC X(15).

       01  WS-BUSCA-PRODUTO.
           05  FILLER                      PIC X(1) VALUE '%'.
           05  WS-NOME-PRODUTO                  PIC X(24).
           05  WS-OTUDORP-EMOM                 PIC X(24).

       01  WS-BUSCA-VENDEDOR.
           05  FILLER                      PIC X(1) VALUE '%'.
           05  WS-VENDP-BUSCA                  PIC X(19).
           05  WS-ACSUB-PDNEV                  PIC X(19).

       77  WS-EIBRESP                      PIC X(30).
       77  WS-SQLCODE                      PIC +9(9).

       77  WS-FILE-NAME                    PIC X(8)
                                                   VALUE 'PRODUTOS'.
       77  WS-QUEUE-NAME                   PIC X(8)
                                                   VALUE 'TS04TPRL'.
       77  WS-ITEM                         PIC S9(04) COMP.
       77  WS-RESP                         PIC S9(08) COMP.
       77  WS-RESTO                        PIC 9(01).
       77  WS-INDEX                        PIC 9(02).
       01  WS-ENDFILE-AUX                  PIC X(01).
           88 ENDFILE-YES                          VALUE 'S'.
           88 ENDFILE-NO                           VALUE 'N'.

      *MAPA REFERENTE A TELA DE CADASTRO
           COPY T04MPRL.
      *COMANDO TECLAS PRESSIONADAS
           COPY DFHAID.
      *CARACTERES E ATRIBUTOS
           COPY DFHBMSCA.

           EXEC SQL
              INCLUDE BKPROD
           END-EXEC.

           EXEC SQL
              INCLUDE SQLCA
           END-EXEC.
      *----------------------------------------------------------------*
       LINKAGE                             SECTION.
      *----------------------------------------------------------------*
       01  DFHCOMMAREA.
           05 OCCURS 0 TO 24579 TIMES DEPENDING ON EIBCALEN
                                           PIC X(01).
      *----------------------------------------------------------------*
       PROCEDURE                           DIVISION.
      *----------------------------------------------------------------*
      *ROTINA DEFINIDA PARA LIDAR COM ERROS DE MAPA E GENERICOS--------*
           EXEC CICS HANDLE CONDITION
              MAPFAIL(999-MAPFAIL)
              ERROR(999-ERROR)
              NOTFND(999-NOTFND)
           END-EXEC

      * SELETOR DE FASE - O MENU PRINCIPAL POSSUI 3 FASES
      *    FASE 1 - ENVIA O MAPA PARA O TERMINAL
      *    FASE 2 - TRATA O CAMPO T1USER
      *    FASE 3 - TRATA OS CAMPOS
      *

           IF EIBCALEN EQUAL 0
               MOVE +80                     TO WS-LENGTH
               MOVE 'FACA O LOGIN NO SISTEMA PELA TRANSACAO FT4A'
                                            TO WS-MSG-ERRO
               PERFORM 999-ENCERRA-TRANSACAO
      *    MOVE '1'                     TO WS-FASE
           END-IF

           MOVE DFHCOMMAREA                TO WS-DFHCOMMAREA

           EVALUATE WS-FASE
              WHEN '1' PERFORM 100-FASE1
              WHEN '2' PERFORM 200-FASE2
              WHEN OTHER
                 MOVE +80                  TO WS-LENGTH
                 MOVE 'ERRO NO NUMERO DA FASE'
                                           TO WS-MSG-ERRO
                 PERFORM 999-ENCERRA-TRANSACAO
           END-EVALUATE
           .

       100-FASE1.
           MOVE LOW-VALUES                 TO MAPPRLO
           MOVE -1                         TO T1PRODFL
           
           PERFORM 210-ENTER

           PERFORM 999-CARREGA-DETALHES
           PERFORM 999-MANDA-TELA
           PERFORM 999-CHAMA-FASE2
           .

       200-FASE2.
           EXEC CICS HANDLE AID
              ENTER   (210-ENTER)
      *        PF10    (215-PF10)
              PF5     (230-PF5 )
              CLEAR   (230-PF5 )
              PF7     (250-PF7 )
              PF8     (260-PF8 )
              PF12    (240-PF12)
              ANYKEY  (250-ANYKEY)
           END-EXEC
           EXEC CICS RECEIVE
              MAP   ('MAPPRL')
              MAPSET('T04MPRL')
              INTO  (MAPPRLI)
           END-EXEC
           .

       210-ENTER.
           IF T1FVALL NOT EQUAL 0 
                EXEC CICS BIF DEEDIT FIELD(T1FVALI) END-EXEC
           END-IF.
           IF T1FVALTL NOT EQUAL 0 
                EXEC CICS BIF DEEDIT FIELD(T1FVALTI) END-EXEC
           END-IF.
           
           EVALUATE WS-FASE 
           WHEN '1'
             MOVE '%'                     TO DCLPROD-NOME-PRODUTO-TEXT
             MOVE +1                       TO DCLPROD-NOME-PRODUTO-LEN 
             MOVE 0,00                     TO WS-MIN-BUSCA
             MOVE 99999,99                 TO WS-MAX-BUSCA
             MOVE ALL '%'                  TO DCLPROD-VENDIDO-POR
           WHEN '2'
             IF T1PRODFL EQUAL 0 OR T1PRODFI EQUAL SPACES
                MOVE '%'                   TO DCLPROD-NOME-PRODUTO-TEXT
                MOVE +1                    TO DCLPROD-NOME-PRODUTO-LEN
             ELSE
                MOVE T1PRODFI              TO WS-NOME-PRODUTO
                MOVE FUNCTION REVERSE(WS-NOME-PRODUTO) 
                                           TO WS-OTUDORP-EMOM
                INSPECT WS-OTUDORP-EMOM REPLACING LEADING SPACES BY '%'
                MOVE FUNCTION REVERSE(WS-OTUDORP-EMOM) 
                                           TO WS-NOME-PRODUTO             
                MOVE WS-BUSCA-PRODUTO      TO DCLPROD-NOME-PRODUTO-TEXT
                MOVE +25                   TO DCLPROD-NOME-PRODUTO-LEN 
             END-IF 
             IF T1VENDFL EQUAL 0 OR T1VENDFI EQUAL SPACES
                MOVE ALL '%'               TO DCLPROD-VENDIDO-POR
             ELSE
                MOVE T1VENDFI              TO WS-VENDP-BUSCA
                MOVE FUNCTION REVERSE(WS-VENDP-BUSCA) 
                                           TO WS-ACSUB-PDNEV
                INSPECT WS-ACSUB-PDNEV REPLACING LEADING SPACES BY '%'
                MOVE FUNCTION REVERSE(WS-ACSUB-PDNEV) 
                                           TO WS-VENDP-BUSCA             
                MOVE WS-BUSCA-VENDEDOR     TO DCLPROD-VENDIDO-POR 
             END-IF 
             
             IF T1FVALL EQUAL 0 
                MOVE 0                   TO WS-MIN-BUSCA
             ELSE                    
                MOVE T1FVALI             TO WS-MIN-BUSCA
             END-IF

             IF T1FVALTL EQUAL 0 
                MOVE 99999,99                 TO WS-MAX-BUSCA
             ELSE 
                MOVE T1FVALTI                 TO WS-MAX-BUSCA
             END-IF                         
           END-EVALUATE

           EXEC SQL         
           DECLARE C1 CURSOR FOR
               SELECT ID_PRODUTO,
                      NOME_PRODUTO,
                      DESCRICAO,
                      VENDIDO_POR,
                      VALOR_UNITARIO
                 FROM PRODUTOS
                 WHERE NOME_PRODUTO LIKE :DCLPROD-NOME-PRODUTO AND
                 VALOR_UNITARIO BETWEEN :WS-MIN-BUSCA AND :WS-MAX-BUSCA
                 AND VENDIDO_POR LIKE :DCLPROD-VENDIDO-POR

                ORDER BY NOME_PRODUTO
           END-EXEC

           EXEC SQL
           OPEN C1
           END-EXEC

           IF SQLCODE NOT EQUAL 0
              MOVE +80                    TO WS-LENGTH
              MOVE 'ERRO AO ABRIR CURSOR C1'
                                           TO WS-MSG-ERRO
              PERFORM 999-ENCERRA-TRANSACAO
           END-IF

           EXEC CICS DELETEQ TS
              QUEUE(WS-QUEUE-NAME)
              RESP(SQLCODE)
           END-EXEC

           MOVE ZERO                       TO WS-ITEM
           SET ENDFILE-NO TO TRUE
           PERFORM 999-CARREGA-TS UNTIL ENDFILE-YES

           EXEC SQL
              CLOSE C1
           END-EXEC

           IF SQLCODE NOT EQUAL 0
              MOVE "ERRO AO FECHAR CURSOR" TO WS-MSG-ERRO
              PERFORM 999-ENCERRA-TRANSACAO
           END-IF

           MOVE 1                         TO WS-PAGA

           DIVIDE WS-ITEM BY 10 GIVING WS-PAGT REMAINDER WS-RESTO

           IF WS-RESTO > 0
              ADD 1 TO WS-PAGT
           END-IF

           PERFORM 999-CARREGA-DETALHES
           IF WS-FASE = '2'
             PERFORM 999-TRATA-FASE2
           END-IF
           .

       230-PF5.
           PERFORM 999-CHAMA-FASE1
           .

       250-PF7.
      *      IF T3PRDL EQUAL 0 OR T3PRDI EQUAL SPACES
      *         MOVE 'PRODUTO NAO INFORMADO. TENTE NOVAMENTE.'
      *                                      TO T3MSGO
      *         PERFORM 999-TRATA-FASE2
      *      END-IF
            IF WS-PAGA = 1
               MOVE 'VOCE JA ESTA NA PRIMEIRA PAGINA'
                                           TO T1MSGO
            ELSE
               SUBTRACT 1 FROM WS-PAGA
               PERFORM 999-CARREGA-DETALHES
            END-IF

            PERFORM 999-TRATA-FASE2
            .

       260-PF8.
      *      IF T3PRDL EQUAL 0 OR T3PRDI EQUAL SPACES
      *         MOVE 'PRODUTO NAO INFORMADO. TENTE NOVAMENTE.'
      *                                      TO T3MSGO
      *         PERFORM 999-TRATA-FASE2
      *      END-IF
            IF WS-PAGA = WS-PAGT
               MOVE 'VOCE JA ESTA NA ULTIMA PAGINA'
                                           TO T1MSGO
            ELSE
               ADD 1 TO WS-PAGA
               PERFORM 999-CARREGA-DETALHES
            END-IF

            PERFORM 999-TRATA-FASE2
            .

       215-PF10.
           PERFORM 999-VALIDA-POSICAO
           
           MOVE DCLPROD-DESCRICAO        TO T1MSGO

           .
       240-PF12.
           MOVE '1'                       TO WS-FASE

           EXEC CICS XCTL
               PROGRAM('T04PLOG')
               COMMAREA(WS-DFHCOMMAREA)
               LENGTH(LENGTH OF WS-DFHCOMMAREA)
           END-EXEC
           .

       250-ANYKEY.
           MOVE 'TECLA PRESSIONADA INVALIDA!'
                                           TO T1MSGO
           PERFORM 999-TRATA-FASE2
           .

       999-ENCERRA-TRANSACAO.
           EXEC CICS SEND TEXT
              FROM (WS-MSG-ERRO)
              LENGTH(WS-LENGTH)
              ERASE FREEKB ALARM
           END-EXEC

           EXEC CICS RETURN
           END-EXEC
           .

       999-MANDA-TELA.
           MOVE EIBTRMID                  TO T1TERMO
           MOVE EIBTRNID                  TO T1TRANSO
           MOVE EIBTASKN                  TO T1TASKO
           MOVE WS-FASE                   TO T1FASEO

           ACCEPT WS-DATA FROM DATE
           ACCEPT WS-HORARIO FROM TIME

           MOVE WS-DIA                     TO WS-DIA-F
           MOVE WS-MES                     TO WS-MES-F
           MOVE WS-ANO                     TO WS-ANO-F

           MOVE WS-HORA                    TO WS-HORA-F
           MOVE WS-MIN                     TO WS-MIN-F
           MOVE WS-SEG                     TO WS-SEG-F

           MOVE WS-DATA-F                   TO T1DATAO
           MOVE WS-HORARIO-F                TO T1HORAO

           EXEC CICS SEND
              MAP ('MAPPRL')
              MAPSET('T04MPRL')
              FROM(MAPPRLO)
              ERASE FREEKB ALARM CURSOR
           END-EXEC
           .

       999-CHAMA-FASE1.
           MOVE '1'                       TO WS-FASE

           EXEC CICS XCTL
              PROGRAM('T04PPRL')
              COMMAREA(WS-DFHCOMMAREA)
              LENGTH(LENGTH OF WS-DFHCOMMAREA)
           END-EXEC
           .

       999-CHAMA-FASE2.
           MOVE '2'                       TO WS-FASE

           EXEC CICS RETURN
               TRANSID('FT4C')
               COMMAREA(WS-DFHCOMMAREA)
               LENGTH(LENGTH OF WS-DFHCOMMAREA)
           END-EXEC
           .

       999-TRATA-FASE2.
           MOVE -1                     TO T1PRODFL
           MOVE WS-PAGA                TO T1PAGAO
           MOVE WS-PAGT                TO T1PAGTO

           PERFORM 999-MANDA-TELA
           PERFORM 999-CHAMA-FASE2
           .

       999-CARREGA-TS.
           EXEC SQL
           FETCH C1 INTO
                        :DCLPROD-ID-PRODUTO,
                        :DCLPROD-NOME-PRODUTO,
                        :DCLPROD-DESCRICAO,
                        :DCLPROD-VENDIDO-POR
                        ,:DCLPROD-VALOR-UNITARIO
           END-EXEC

           EVALUATE SQLCODE
              WHEN 0
                 ADD 1 TO WS-ITEM
                 MOVE DCLPROD-NOME-PRODUTO-TEXT TO LD-PRODUTO
                 MOVE DCLPROD-VENDIDO-POR       TO LD-VENDIDO
                 MOVE DCLPROD-VALOR-UNITARIO    TO LD-VALOR

                 EXEC CICS WRITEQ TS
                    QUEUE(WS-QUEUE-NAME)
                    FROM(WS-LINDET)
                    ITEM(WS-ITEM)
                    RESP(SQLCODE)
                 END-EXEC

                 IF WS-RESP NOT = DFHRESP(NORMAL)
                   PERFORM 999-ERROR
                 END-IF
                 
              WHEN +100
                IF WS-ITEM = 0
                   MOVE 'PRODUTO NAO ENCONTRADO'     TO T1MSGO
                   PERFORM 999-TRATA-FASE2
                ELSE                 
                   SET ENDFILE-YES TO TRUE
                END-IF
              WHEN OTHER
                PERFORM 999-NOTFND
           END-EVALUATE
           .

       999-CARREGA-DETALHES.
           COMPUTE WS-ITEM = (WS-PAGA - 1) * 10 + 1
           MOVE 0                          TO WS-INDEX

           PERFORM WITH TEST AFTER UNTIL WS-INDEX = 10
              EXEC CICS READQ TS
                 QUEUE (WS-QUEUE-NAME)
                 INTO  (WS-LINDET)
                 ITEM  (WS-ITEM)
                 RESP  (WS-RESP)
              END-EXEC

              IF WS-RESP = DFHRESP(NORMAL)
                 ADD 1 TO WS-INDEX
                 MOVE WS-LINDET            TO T1LINDEO(WS-INDEX)
              ELSE
                 IF WS-RESP = DFHRESP(ITEMERR)
                    PERFORM WITH TEST AFTER UNTIL WS-INDEX = 10
                       ADD 1 TO WS-INDEX
                       MOVE SPACES         TO T1LINDEO(WS-INDEX)
                    END-PERFORM
                 ELSE
                    PERFORM 999-ERROR
                 END-IF
              END-IF
              ADD 1 TO WS-ITEM
           END-PERFORM
           .

       999-VALIDA-POSICAO.
           IF EIBCPOSN <= 719 OR EIBCPOSN >= 1520
              MOVE 'POSICAO INVALIDA DO CURSOR'
                                           TO T1MSGO
              PERFORM 999-TRATA-FASE2
           END-IF

           COMPUTE WS-INDEX = EIBCPOSN / 80 + 1 - 9
           MOVE T1LINDEI(WS-INDEX)         TO WS-LINDET

           IF LD-PRODUTO EQUAL SPACES
              MOVE 'POSICAO NAO CONTEM PRODUTO'
                                           TO T1MSGO
              PERFORM 999-TRATA-FASE2
           END-IF
           .

       999-NOTFND.
           MOVE 'NAO EXISTEM PRODUTOS COM CODIGO MAIOR OU IGUAL AO INFOR
      -         'MADO'                     TO T1MSGO
           PERFORM 999-TRATA-FASE2
           .

       999-MAPFAIL.
           MOVE 'ERRO MAPA T04MPRL'        TO WS-MSG-ERRO
           PERFORM 999-ENCERRA-TRANSACAO
           .

       999-ERROR.                                             
           MOVE EIBRESP TO WS-EIBRESP                         
           MOVE SQLCODE TO WS-SQLCODE                         
           MOVE +80 TO WS-LENGTH                              
           STRING 'CODIGO DO ERRO '        DELIMITED BY SIZE  
           WS-EIBRESP               DELIMITED BY SPACES
           ' SQLCODE: '             DELIMITED BY SIZE  
           WS-SQLCODE               DELIMITED BY SIZE  
           'PRODUTO:  '             DELIMITED BY SIZE  
           WS-NOME-PRODUTO          DELIMITED BY SIZE  
           INTO WS-MSG-ERRO                               
           PERFORM 999-ENCERRA-TRANSACAO                      
           .     
