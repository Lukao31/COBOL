      *--------------------------------------------------------------*
       IDENTIFICATION                      DIVISION.
      *--------------------------------------------------------------*
       PROGRAM-ID.                         T07PPRL.
       AUTHOR.                             LUCAS.
      *--------------------------------------------------------------*
       ENVIRONMENT                         DIVISION.
      *--------------------------------------------------------------*
       CONFIGURATION                       SECTION.
       SPECIAL-NAMES.
           DECIMAL-POINT IS COMMA.
      *--------------------------------------------------------------*
       DATA                                DIVISION.
      *--------------------------------------------------------------*
       WORKING-STORAGE                     SECTION.
      *--------------------------------------------------------------*
       77  WS-MSG-ERRO                     PIC X(80).
       77  WS-LENGTH                       PIC S9(04) COMP.
       01  WS-DFHCOMMAREA.
           05 WS-FASE                      PIC X(01).
           05 WS-PAGA                      PIC 9(02).
           05 WS-PAGT                      PIC 9(02).
      *
       01  WS-VAR-TEMPO.
           05 WS-DATA                      PIC X(10).
           05 WS-HORARIO                   PIC X(08).
      *
       01  LD-LINDET.
           05 FILLER                       PIC X(06)
                                                   VALUE SPACES.
           05 LD-NOME-PRODUTO              PIC X(25).
           05 FILLER                       PIC X(04)
                                                   VALUE SPACES.
           05 LD-VENDIDO-POR               PIC X(20).
           05 FILLER                       PIC X(05)
                                                   VALUE SPACES.
           05 FILLER                       PIC X(01)
                                                   VALUE '$'.
           05 LD-VALOR-UNITARIO                    PIC Z.ZZZ.ZZ9,99.
           05 FILLER                       PIC X(07)
                                                   VALUE SPACES.

      *
       77  WS-SQLCODE                      PIC +9(09).
       77  WS-QUEUE-NAME                   PIC X(08)
                                               VALUE 'T07PPRL'.
       77  WS-FILE-NAME                    PIC X(08)
                                               VALUE 'VCADPRD'.
       77  WS-ITEM                         PIC S9(04) COMP.
       77  WS-RESP                         PIC S9(08) COMP.
       77  WS-RESTO                        PIC 9(01).
       77  WS-INDEX                        PIC 9(02).

      *
           COPY T07MPRL.
           COPY DFHAID.
           COPY DFHBMSCA.
      *
           EXEC SQL
               INCLUDE PRODUTOS
           END-EXEC.

           EXEC SQL
               INCLUDE SQLCA
           END-EXEC.
      *----------------------------------------------------------------*
       LINKAGE                             SECTION.
      *----------------------------------------------------------------*
       01  DFHCOMMAREA.
           05 OCCURS 0 TO 24576 TIMES DEPENDING ON EIBCALEN
                                           PIC X(01).
      *--------------------------------------------------------------*
       PROCEDURE                           DIVISION.
      *--------------------------------------------------------------*
           EXEC CICS HANDLE CONDITION
              NOTFND  (999-NOTFND)
              MAPFAIL (999-ERRO-MAPA)
              ERROR   (999-ERRO-GENERICO)
           END-EXEC
      *---------------------------------------------------------------*A
           MOVE DFHCOMMAREA                 TO WS-DFHCOMMAREA
      *
           IF EIBCALEN EQUAL 0
              MOVE +80                   TO WS-LENGTH
              MOVE 'ENTRE COM A TRANSACAO FT7A'
                                         TO WS-MSG-ERRO
              PERFORM 999-ENCERRA-TRANSACAO
           END-IF
      *
           EVALUATE WS-FASE
              WHEN '1' PERFORM 100-FASE1
              WHEN '2' PERFORM 200-FASE2
              WHEN OTHER
                 MOVE +80                   TO WS-LENGTH
                 MOVE 'UTILIZE A OPCAO B DA TRANSACAO FT7A'
                                            TO WS-MSG-ERRO
                 PERFORM 999-ENCERRA-TRANSACAO
           END-EVALUATE
           .
      *
       100-FASE1.
      * LIMPAR AS VARIAVEIS DO MAPA
           MOVE LOW-VALUES                 TO MAPAPRLO
      * POSICIONAMENTO LOGICO - DIRETO NO CAMPO DESEJADO
           MOVE -1                         TO PRDPRLL
      * MOVER A MENSAGEM PARA O CAMPO APROPRIADO
           MOVE 'ADICIONE O NOME DO PRODUTO DESEJADO'
                                           TO MSGPRLO
      * PROTEGE E DESPROTEGE OS CAMPOS
      *    PERFORM 999-PROTECAO-FASE2
      * MANDAR A TELA PARA O TERMINAL
           PERFORM 999-MANDA-TELA
      * ENCERRA A TRANSACAO, CHAMANDO A PROXIMA FASE
           PERFORM 999-CHAMA-FASE2
           .
      *
       200-FASE2.
           EXEC CICS HANDLE AID
                ENTER  (210-ENTER)
                PF1    (215-PF1)
                PF5    (230-PF5)
                CLEAR  (230-PF5)
                ANYKEY (240-ANYKEY)
                PF7    (250-PF7)
                PF8    (260-PF8)
                PF10   (270-PF10)
                PF11   (280-PF11)
                PF12   (290-PF12)
           END-EXEC
      *
           EXEC CICS RECEIVE
                MAP    ('MAPAPRL')
                MAPSET ('T07MPRL')
                INTO   (MAPAPRLI)
           END-EXEC
           .
      *
       210-ENTER.
           EXEC SQL
              DECLARE C1 CURSOR FOR
              SELECT NOME_PRODUTO
                    ,VENDIDO_POR
                    ,VALOR_UNITARIO
              FROM PRODUTOS
      *        WHERE DESCRICAO >= :DCLPRD-DESCRICAO
              ORDER BY NOME_PRODUTO
           END-EXEC
      *
           EXEC SQL
              OPEN C1
           END-EXEC
      *
           IF SQLCODE NOT EQUAL 0
              MOVE "ERRO AO ABRIR O  CURSOR" TO MSGPRLO
              MOVE SQLCODE                 TO WS-SQLCODE
              GO TO 999-ERROR-DB2
           END-IF

           MOVE ZERO                       TO WS-ITEM
           PERFORM 999-CARREGA-TS UNTIL SQLCODE = +100
      *
           EXEC SQL
              CLOSE C1
           END-EXEC

           MOVE 1                          TO WS-PAGA

           DIVIDE WS-ITEM BY 10 GIVING WS-PAGT REMAINDER WS-RESTO

           IF WS-RESTO > 0
              ADD 1 TO WS-PAGT
           END-IF

           PERFORM 999-CARREGA-DETALHES
           PERFORM 999-TRATA-FASE2
           .
      *
       215-PF1.
           MOVE '1'                     TO WS-FASE
      *
           EXEC CICS XCTL
              PROGRAM ('T07PPRD')
              COMMAREA (WS-DFHCOMMAREA)
              LENGTH (LENGTH OF WS-DFHCOMMAREA)
           END-EXEC
           .
      *
       230-PF5.
           PERFORM 999-ENCERRA-TRANSACAO
           .
      *
       240-ANYKEY.
           MOVE 'TECLA INVALIDA'           TO MSGPRLO
           PERFORM 999-TRATA-FASE2
           .
      *
       250-PF7.
           IF WS-PAGA = 1
               MOVE 'VOCE JA ESTA NA PRIMEIRA PAGINA'
                                           TO MSGPRLO
            ELSE
               SUBTRACT 1 FROM WS-PAGA
               PERFORM 999-CARREGA-DETALHES
            END-IF

            PERFORM 999-TRATA-FASE2
            .
      *
       260-PF8.
           IF WS-PAGA = WS-PAGT
              MOVE 'VOCE JA ESTA NA ULTIMA PAGINA'
                                           TO MSGPRLO
           ELSE
              ADD 1 TO WS-PAGA
              PERFORM 999-CARREGA-DETALHES
           END-IF

            PERFORM 999-TRATA-FASE2
            .
      *
       270-PF10.
           MOVE '1'                     TO WS-FASE
      *
           EXEC CICS XCTL
              PROGRAM ('T07PCAR')
              COMMAREA (WS-DFHCOMMAREA)
              LENGTH (LENGTH OF WS-DFHCOMMAREA)
           END-EXEC
           .
      *
       280-PF11.
           MOVE '1'                     TO WS-FASE
      *
           EXEC CICS XCTL
              PROGRAM ('T07PPED')
              COMMAREA (WS-DFHCOMMAREA)
              LENGTH (LENGTH OF WS-DFHCOMMAREA)
           END-EXEC
           .
      *
       290-PF12.
           MOVE '1'                     TO WS-FASE
      *
           EXEC CICS XCTL
              PROGRAM ('T07PLOG')
              COMMAREA (WS-DFHCOMMAREA)
              LENGTH (LENGTH OF WS-DFHCOMMAREA)
           END-EXEC
           .
      *
       999-ENCERRA-TRANSACAO.
           EXEC CICS SEND TEXT
              FROM (WS-MSG-ERRO)
              LENGTH (+80)
              ERASE FREEKB ALARM
           END-EXEC
      *
           EXEC CICS RETURN
           END-EXEC
           .
      *
       999-MANDA-TELA.
           MOVE EIBTRMID                   TO TERMPRLO
           MOVE EIBTRNID                   TO TRANSPRLO
           MOVE EIBTASKN                   TO TASKPRLO
           MOVE WS-FASE                    TO FASEPRLO
      *
      *    MOVE LD-LINDET                  TO LIST1PRLO
      *
           EXEC CICS LINK
              PROGRAM('AUXCICS1')
              COMMAREA(WS-VAR-TEMPO)
              LENGTH(+18)
           END-EXEC
      *
           MOVE WS-DATA(01:02)              TO DIADATO
           MOVE WS-DATA(04:02)              TO MESDATO
           MOVE WS-DATA(07:04)              TO ANODATO
           MOVE WS-HORARIO(01:02)           TO HORADATO
           MOVE WS-HORARIO(04:02)           TO MINDATO
      *
           EXEC CICS SEND
              MAP    ('MAPAPRL')
              MAPSET ('T07MPRL')
              FROM   (MAPAPRLO)
              ERASE FREEKB ALARM CURSOR
           END-EXEC
           .
      *
       999-CHAMA-FASE1.
           MOVE '1'                         TO WS-FASE
      *
           EXEC CICS XCTL
              PROGRAM ('T07PCAD')
              COMMAREA (WS-DFHCOMMAREA)
              LENGTH (LENGTH OF WS-DFHCOMMAREA)
           END-EXEC
           .
       999-CARREGA-DETALHES.
           COMPUTE WS-ITEM = (WS-PAGA - 1) * 10 + 1
           MOVE 0                          TO WS-INDEX

           PERFORM WITH TEST AFTER UNTIL WS-INDEX = 10
              EXEC CICS READQ TS
                 QUEUE (WS-QUEUE-NAME)
                 INTO  (LD-LINDET)
                 ITEM  (WS-ITEM)
                 RESP  (WS-RESP)
              END-EXEC

              IF WS-RESP = DFHRESP(NORMAL)
                 ADD 1 TO WS-INDEX
                 MOVE LD-LINDET            TO LIST1PRLO(WS-INDEX)
              ELSE
                 IF WS-RESP = DFHRESP(ITEMERR)
                    PERFORM WITH TEST AFTER UNTIL WS-INDEX = 10
                       ADD 1 TO WS-INDEX
                       MOVE SPACES         TO LIST1PRLO(WS-INDEX)
                    END-PERFORM
                 ELSE
                    PERFORM 999-ERRO-GENERICO
                 END-IF
              END-IF
              ADD 1                        TO WS-ITEM
           END-PERFORM
           .

      *
       999-CHAMA-FASE2.
           MOVE '2'                         TO WS-FASE
      *
           EXEC CICS RETURN
              TRANSID ('FT7C')
              COMMAREA (WS-DFHCOMMAREA)
              LENGTH (LENGTH OF WS-DFHCOMMAREA)
           END-EXEC
           .
      *
       999-TRATA-FASE2.
           MOVE -1                           TO PRDPRLL
      *    PERFORM 999-PROTECAO-FASE2
           PERFORM 999-MANDA-TELA
           PERFORM 999-CHAMA-FASE2
           .
      *
       999-CARREGA-TS.
           EXEC SQL
               FETCH C1 INTO
                :DCLPRD-NOME-PRODUTO
               ,:DCLPRD-VENDIDO-POR
               ,:DCLPRD-VALOR-UNITARIO
           END-EXEC
      *
           IF SQLCODE = 0
              ADD 1 TO WS-ITEM
              MOVE DCLPRD-NOME-PRODUTO   TO LD-NOME-PRODUTO
              MOVE DCLPRD-VENDIDO-POR    TO LD-VENDIDO-POR
              MOVE DCLPRD-VALOR-UNITARIO TO LD-VALOR-UNITARIO
      *
              EXEC CICS WRITEQ TS
                  QUEUE(WS-QUEUE-NAME)
                  FROM(LD-LINDET)
                  ITEM(WS-ITEM)
                  RESP(WS-RESP)
              END-EXEC
      *
              IF WS-RESP NOT = DFHRESP(NORMAL)
                 PERFORM 999-ERRO-GENERICO
              END-IF
           ELSE
              IF SQLCODE NOT = +100
                 MOVE "ERRO LEITURA CURSOR C1"
                                                 TO MSGPRLO
                 MOVE SQLCODE                    TO WS-SQLCODE
                 GO TO 999-ERROR-DB2
               END-IF
           END-IF
                .
      *
       999-ERRO-MAPA.
           MOVE +80                          TO WS-LENGTH
           MOVE 'ERRO MAPA T07MPRL'          TO WS-MSG-ERRO
           PERFORM 999-ENCERRA-TRANSACAO
           .
      *
       999-ERRO-GENERICO.
           MOVE 'ERRO GENERICO T07PPRL'     TO WS-MSG-ERRO
           PERFORM 999-ENCERRA-TRANSACAO
           .
      *
       999-NOTFND.
           STRING 'PRODUTO '                 DELIMITED BY SIZE
                   PRDPRLI                   DELIMITED BY SPACE
                   'NAO LOCALIZADO'          DELIMITED BY SIZE
                                             INTO MSGPRLO
           PERFORM 999-TRATA-FASE2
           .
      *
       999-ERROR-DB2.
           MOVE +80                        TO WS-LENGTH
           MOVE SQLCODE                    TO WS-SQLCODE
           STRING 'ERRO DB2 SQL CODE: '  WS-SQLCODE
                  DELIMITED BY SIZE INTO WS-MSG-ERRO
           PERFORM 999-ENCERRA-TRANSACAO
           PERFORM 999-TRATA-FASE2
           .
